[{"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/index.tsx":"1","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/reportWebVitals.ts":"2","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/App.tsx":"3","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/content-scripts/opensea.js":"4","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/background/index.js":"5","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/context/WalletProvider.js":"6","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/utils/events.js":"7","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/utils/storage.js":"8","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/constants.js":"9","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/utils/Transactor.js":"10","/Users/codypumper/dev/subgraph-chrome/src/content-scripts/opensea.js":"11","/Users/codypumper/dev/subgraph-chrome/src/background/index.js":"12","/Users/codypumper/dev/subgraph-chrome/src/index.tsx":"13","/Users/codypumper/dev/subgraph-chrome/src/context/WalletProvider.js":"14","/Users/codypumper/dev/subgraph-chrome/src/reportWebVitals.ts":"15","/Users/codypumper/dev/subgraph-chrome/src/App.tsx":"16","/Users/codypumper/dev/subgraph-chrome/src/utils/events.js":"17","/Users/codypumper/dev/subgraph-chrome/src/utils/storage.js":"18","/Users/codypumper/dev/subgraph-chrome/src/utils/Transactor.js":"19","/Users/codypumper/dev/subgraph-chrome/src/constants.js":"20"},{"size":615,"mtime":1669606004302,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1668558495194,"results":"23","hashOfConfig":"22"},{"size":2923,"mtime":1671035077020,"results":"24","hashOfConfig":"22"},{"size":8848,"mtime":1671035804489,"results":"25","hashOfConfig":"22"},{"size":444,"mtime":1671035729358,"results":"26","hashOfConfig":"22"},{"size":3730,"mtime":1670292510820,"results":"27","hashOfConfig":"22"},{"size":181,"mtime":1669606004302,"results":"28","hashOfConfig":"22"},{"size":699,"mtime":1669606004303,"results":"29","hashOfConfig":"22"},{"size":6153,"mtime":1670292510820,"results":"30","hashOfConfig":"22"},{"size":5414,"mtime":1670292510821,"results":"31","hashOfConfig":"22"},{"size":9356,"mtime":1676839873576,"results":"32","hashOfConfig":"33"},{"size":1079,"mtime":1676839873575,"results":"34","hashOfConfig":"33"},{"size":615,"mtime":1669606004302,"results":"35","hashOfConfig":"33"},{"size":3730,"mtime":1670292510820,"results":"36","hashOfConfig":"33"},{"size":425,"mtime":1668558495194,"results":"37","hashOfConfig":"33"},{"size":4642,"mtime":1676839873575,"results":"38","hashOfConfig":"33"},{"size":181,"mtime":1669606004302,"results":"39","hashOfConfig":"33"},{"size":699,"mtime":1669606004303,"results":"40","hashOfConfig":"33"},{"size":5414,"mtime":1670292510821,"results":"41","hashOfConfig":"33"},{"size":6153,"mtime":1670292510820,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pw5mba",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kjqc23",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/index.tsx",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/reportWebVitals.ts",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/App.tsx",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/content-scripts/opensea.js",["86"],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/background/index.js",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/context/WalletProvider.js",["87","88"],"import React from \"react\";\nimport createMetaMaskProvider from \"metamask-extension-provider\";\nimport { EthereumEvents } from \"../utils/events\";\nimport storage from \"../utils/storage\";\nimport { ethers } from \"ethers\";\n\nexport const WalletContext = React.createContext();\nexport const useWallet = () => React.useContext(WalletContext);\n\nconst WalletProvider = React.memo(({ children }) => {\n  const [chainId, setChainId] = React.useState(null);\n  const [account, setAccount] = React.useState(null);\n  const [isAuthenticated, setAuthenticated] = React.useState(false);\n  const [appLoading, setAppLoading] = React.useState(false);\n  const [userSigner, setUserSigner] = React.useState(null);\n\n  // console.log({ chainId, account, isAuthenticated });\n\n  React.useEffect(() => {\n    connectEagerly();\n    return () => {\n      const provider = getProvider();\n      unsubscribeToEvents(provider);\n    };\n  }, []);\n\n  const subscribeToEvents = (provider) => {\n    if (provider && provider.on) {\n      provider.on(EthereumEvents.CHAIN_CHANGED, handleChainChanged);\n      provider.on(EthereumEvents.ACCOUNTS_CHANGED, handleAccountsChanged);\n      provider.on(EthereumEvents.CONNECT, handleConnect);\n      provider.on(EthereumEvents.DISCONNECT, handleDisconnect);\n    }\n  };\n\n  const unsubscribeToEvents = (provider) => {\n    if (provider && provider.removeListener) {\n      provider.removeListener(EthereumEvents.CHAIN_CHANGED, handleChainChanged);\n      provider.removeListener(\n        EthereumEvents.ACCOUNTS_CHANGED,\n        handleAccountsChanged\n      );\n      provider.removeListener(EthereumEvents.CONNECT, handleConnect);\n      provider.removeListener(EthereumEvents.DISCONNECT, handleDisconnect);\n    }\n  };\n\n  const connectEagerly = async () => {\n    const metamask = await storage.get(\"metamask-connected\");\n    if (metamask?.connected) {\n      await connectWallet();\n    }\n  };\n\n  const getProvider = () => {\n    if (window.ethereum) {\n      console.log(\"found window.ethereum>>\");\n      return window.ethereum;\n    } else {\n      const provider = createMetaMaskProvider();\n      return provider;\n    }\n  };\n\n  const connectWallet = async () => {\n    console.log(\"connecting to Wallet\");\n    try {\n      const provider = new ethers.providers.Web3Provider(\n        createMetaMaskProvider()\n      );\n      // Prompt user for account connections\n      await provider.send(\"eth_requestAccounts\", []);\n\n      const signer = provider.getSigner();\n      const acc = await signer.getAddress();\n      setAccount(acc);\n      setAuthenticated(true);\n      setUserSigner(signer);\n      subscribeToEvents(provider);\n    } catch (e) {\n      console.log(\"error while connect\", e);\n    } finally {\n      setAppLoading(false);\n    }\n  };\n\n  const disconnectWallet = async () => {\n    console.log(\"disconnectWallet runs\");\n    try {\n      storage.set(\"metamask-connected\", { connected: false });\n      setAccount(null);\n      setAuthenticated(false);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleAccountsChanged = (accounts) => {\n    setAccount(accounts[0]);\n    console.log(\"[account changes]: \", accounts[0]);\n  };\n\n  const handleChainChanged = (chainId) => {\n    setChainId(chainId);\n    console.log(\"[chainId changes]: \", chainId);\n  };\n\n  const handleConnect = () => {\n    setAuthenticated(true);\n    console.log(\"[connected]\");\n  };\n\n  const handleDisconnect = () => {\n    console.log(\"[disconnected]\");\n    disconnectWallet();\n  };\n\n  return (\n    <WalletContext.Provider\n      value={{\n        disconnectWallet,\n        connectWallet,\n        isAuthenticated,\n        appLoading,\n        account,\n        userSigner,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n});\n\nexport default WalletProvider;\n","/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/utils/events.js",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/utils/storage.js",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/constants.js",[],"/Users/codypumper/dev/scaffold-eth/packages/chrome-extension/src/utils/Transactor.js",[],"/Users/codypumper/dev/subgraph-chrome/src/content-scripts/opensea.js",[],"/Users/codypumper/dev/subgraph-chrome/src/background/index.js",["89"],"/* eslint-disable no-undef */\n\nfunction delay(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nchrome.runtime.onMessage.addListener(async (message, sender, sendResponse) => {\n  if (!sender.origin.includes('opensea.io')) {\n    console.log('talk to content script');\n\n    const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n    chrome.windows.remove(tab.windowId);\n\n    //send message to content script\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n      console.log('Tabs: ', tabs);\n      chrome.tabs.sendMessage(tabs[0].id, { message: 'Transaction xxxxxxxxxx submitted' }, function (response) {\n        console.log(response);\n      });\n    });\n  }\n\n  if (message.open) {\n    // create new window and load in the extension page\n    console.log(message);\n    chrome.windows.create({\n      url: chrome.runtime.getURL('index.html'),\n      type: 'popup',\n      width: 400,\n      height: 200,\n      // left: 800,\n      // top: 100,\n    });\n    sendResponse({ message: 'Extension window opened' });\n  }\n});\n","/Users/codypumper/dev/subgraph-chrome/src/index.tsx",[],"/Users/codypumper/dev/subgraph-chrome/src/context/WalletProvider.js",["90","91"],"/Users/codypumper/dev/subgraph-chrome/src/reportWebVitals.ts",[],"/Users/codypumper/dev/subgraph-chrome/src/App.tsx",["92"],"import logo from './logo.svg';\nimport './App.css';\nimport { useWallet } from './context/WalletProvider';\nimport Transactor from './utils/Transactor';\nimport { useGasPrice, useContractLoader } from 'eth-hooks';\nimport { NETWORKS } from './constants';\nimport deployedContracts from './contracts/hardhat_contracts.json';\nimport { useEffect } from 'react';\n\nconst targetNetwork = NETWORKS.goerli;\n\nfunction App() {\n  const { isAuthenticated, connectWallet, disconnectWallet, account, userSigner } = useWallet();\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, 'fast', 3000);\n  // load your contracts\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: {} };\n  // @ts-ignore\n  const writeContracts = useContractLoader(userSigner, contractConfig, 5);\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice) || undefined;\n\n  // Ensure wallet connects on load (instantly)\n  useEffect(() => {\n    const initConnect = async () => {\n      console.log('initConnect in useEffect');\n      await connectWallet();\n    };\n    initConnect();\n  }, []);\n\n  const sendTx = async (assetHash: any, assetId: any, review: any, rating: any) => {\n    console.log('Attempting sendTx!', assetHash, assetId, review, rating);\n\n    // const createTx = await writeContracts.HumbleOpinion.create(review, false, assetHash, assetId, parseInt(rating), 1);\n\n    // @ts-ignore\n    var newTx = await tx(writeContracts.HumbleOpinion.create(review, false, assetHash, assetId, parseInt(rating), 1));\n    var result = await newTx.wait();\n\n    // // @ts-ignore\n    // const result = tx(createTx, (update) => {\n    //   console.log('📡 Transaction Update:', update);\n    //   if (update && (update.status === 'confirmed' || update.status === 1)) {\n    //     console.log(' 🍾 Transaction ' + update.hash + ' finished!');\n    //     console.log(' ⛽️ ' + update.gasUsed + '/' + (update.gasLimit || update.gas) + ' @ ' + parseFloat(update.gasPrice) / 1000000000 + ' gwei');\n    //   }\n    // });\n    // console.log(await result);\n    console.log('awaiting metamask/web3 confirm result...', result);\n\n    chrome.runtime.sendMessage(\n      'haibllpmgchkboompbnjeopjknlaelmb',\n      {\n        message: 'Transaction xxxxxxxxxx submitted',\n      },\n      (response) => {\n        console.log('did it work        ?');\n        /* handle the response from background here */\n      }\n    );\n\n    // window.close();\n\n    // const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n    // console.log('tab: ', tab);\n\n    // // @ts-ignore\n    // chrome.tabs.sendMessage(tab.id, { message: 'Transaction xxxxxxxxxx submitted' });\n\n    // window.close();\n\n    //   chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n    //     chrome.tabs.executeScript(tabs[0].id, {\n    //         file: \"content_script3.js\"\n    //     }, function(){\n    //         chrome.tabs.sendMessage(tabs[0].id,{\n    //             updateTextTo: updateTextTo\n    //         });\n    //     });\n    // });\n\n    //send message to content script\n    // chrome.tabs.query({ active: true, currentWindow: true }, function (tabs: any) {\n    //   console.log('Tabs: ', tabs);\n    //   chrome.tabs.sendMessage(tabs[0].id, { message: 'Transaction xxxxxxxxxx submitted' }, function (response) {\n    //     console.log(response);\n    //   });\n    // });\n  };\n\n  const messageFromContentScript = async (message: any, sender: any, sendResponse: any) => {\n    if (message.assetHash) {\n      // trigger transaction\n      await sendTx(message.assetHash, message.assetId, message.review, message.rating);\n      sendResponse({\n        message: 'Transaction submitted',\n      });\n    }\n  };\n\n  useEffect(() => {\n    chrome.runtime.onMessage.addListener(messageFromContentScript);\n    return function cleanup() {\n      chrome.runtime.onMessage.removeListener(messageFromContentScript);\n    };\n  });\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img src={logo} className='App-logo' alt='logo' />\n        <p>{isAuthenticated && 'Connected to: ' + account}</p>\n        <p>\n          <button onClick={isAuthenticated ? disconnectWallet : connectWallet} id='wallet-connect'>\n            {isAuthenticated ? 'Disconnect Wallet' : 'Connect Wallet'}\n          </button>\n          <button\n            onClick={async () => {\n              await sendTx('xxx', '100', 'Btn test', 3);\n            }}>\n            Send Tx\n          </button>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/codypumper/dev/subgraph-chrome/src/utils/events.js",[],"/Users/codypumper/dev/subgraph-chrome/src/utils/storage.js",[],"/Users/codypumper/dev/subgraph-chrome/src/utils/Transactor.js",[],"/Users/codypumper/dev/subgraph-chrome/src/constants.js",[],{"ruleId":"93","severity":1,"message":"94","line":234,"column":10,"nodeType":"95","messageId":"96","endLine":234,"endColumn":15},{"ruleId":"93","severity":1,"message":"97","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":25,"column":6,"nodeType":"100","endLine":25,"endColumn":8,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":15},{"ruleId":"93","severity":1,"message":"97","line":11,"column":10,"nodeType":"95","messageId":"96","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":25,"column":6,"nodeType":"100","endLine":25,"endColumn":8,"suggestions":"102"},{"ruleId":"98","severity":1,"message":"103","line":31,"column":6,"nodeType":"100","endLine":31,"endColumn":8,"suggestions":"104"},"no-unused-vars","'delay' is defined but never used.","Identifier","unusedVar","'chainId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'connectEagerly' and 'unsubscribeToEvents'. Either include them or remove the dependency array.","ArrayExpression",["105"],["106"],"React Hook useEffect has a missing dependency: 'connectWallet'. Either include it or remove the dependency array.",["107"],{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [connectEagerly, unsubscribeToEvents]",{"range":"113","text":"114"},{"range":"115","text":"114"},"Update the dependencies array to be: [connectWallet]",{"range":"116","text":"117"},[899,901],"[connectEagerly, unsubscribeToEvents]",[899,901],[1194,1196],"[connectWallet]"]